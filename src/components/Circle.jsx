import { useState } from 'react';
import { Link } from 'react-router-dom';
import { ArrowIcon } from './ArrowIcon';
import Modal from './Modal';

export default function Circle() {
	const [isModalOpen, setModalOpen] = useState(false);
	const [modalContent, setModalContent] = useState({ img: '', text: '' });

	const handleCircleClick = (contentObj) => {
		setModalContent(contentObj);
		setModalOpen(true);
	};

	function renderCircle(cx, cy, emoji, text, content = '') {
		return (
			<g
				className="cursor-pointer transform transition-transform duration-300 hover:scale-110"
				onClick={() => handleCircleClick(content)}
			>
				<circle cx={cx} cy={cy} r="70" fill="#b799ff" strokeWidth="10" />
				<text x={cx} y={cy - 10} fill="white" fontSize="40" textAnchor="middle">
					{emoji}
				</text>
				<text
					x={cx}
					y={cy + 30}
					fill="white"
					fontSize="16"
					fontWeight="bold"
					textAnchor="middle"
				>
					{text}
				</text>
			</g>
		);
	}

	function renderPath(x1, y1, x2, y2, cx, cy) {
		return (
			<path
				d={`M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`}
				stroke="#acbcff"
				fill="transparent"
				strokeWidth="2"
			/>
		);
	}

	return (
		<div className="relative p-10 bg-e6fffd">
			<svg width="1200" height="820" viewBox="-20 -20 1240 860">
				<rect
					x="20"
					y="20"
					width="1200"
					height="800"
					fill="#f3e8ff"
					rx="30"
					ry="30"
					filter="url(#shadow)"
				/>

				{/* L√≠neas de la hoja */}
				{[...Array(40)].map((_, i) => (
					<line
						key={i}
						x1="20"
						y1={20 + i * 20}
						x2="1220"
						y2={20 + i * 20}
						stroke="#e6fffd"
						strokeWidth="1"
					/>
				))}

				<defs>
					<filter id="shadow" x="-10%" y="-10%" width="120%" height="120%">
						<feGaussianBlur in="SourceAlpha" stdDeviation="5" />
						<feOffset dx="5" dy="5" result="offsetblur" />
						<feComponentTransfer>
							<feFuncA type="linear" slope="0.5" />
						</feComponentTransfer>
						<feMerge>
							<feMergeNode />
							<feMergeNode in="SourceGraphic" />
						</feMerge>
					</filter>
				</defs>

				{/* Texto en la parte superior */}
				<foreignObject x="280" y="50" width="650" height="130">
					<div
						xmlns="http://www.w3.org/1999/xhtml"
						style={{
							fontSize: '32px',
							fontWeight: 'bold',
							color: '#FFA07A', // Letras moradas
							fontFamily: '"Sacramento", cursive',
							textAlign: 'center',
							lineHeight: '1.5em',
							padding: '10px',
							animation: 'fadeIn 2s',
						}}
					>
						Momentos
					</div>
				</foreignObject>

				{/* L√≠neas de uni√≥n entre los c√≠rculos */}
				{renderPath(250, 250, 450, 270, 350, 200)}
				{renderPath(450, 270, 700, 250, 575, 320)}
				{renderPath(700, 250, 950, 290, 825, 200)}
				{renderPath(950, 290, 950, 550, 1000, 420)}
				{renderPath(950, 550, 700, 590, 825, 620)}
				{renderPath(700, 590, 450, 550, 575, 520)}
				{renderPath(450, 550, 250, 590, 350, 620)}

				{/* Funci√≥n para renderizar c√≠rculos con emoji y texto */}
				{renderCircle(250, 250, 'üíª', 'problemas', {
					img: 'src/assets/img/modalImage/monkey-computer.gif',
					text: 'Todo empez√≥ por ayudarte con un problema, no pens√© en ese momento que te volver√≠as alguien tan importante para m√≠. Me gusta creer que las cosas pasan por algo y creo que as√≠ fue, justo en esa reuni√≥n de Zoom nadie pudo solucionar tu problema, ni el mism√≠simo Max. Gracias a un conjunto de sucesos espec√≠ficos te habl√© y agradezco al destino por eso.',
				})}
				{renderCircle(450, 270, 'üìö', 'programar', {
					img: 'src/assets/img/modalImage/gato-digitando.gif',
					text: 'Esto fue lo que m√°s tiempo nos hizo pasar juntos, aunque creas que no, fuiste un pilar importante tambi√©n para que lo lograra, me diste una motivaci√≥n para seguir adelante y conseguirlo. Espero pudiera haberte traspasado un poco de conocimiento que te sirva para tu futuro. Y espero sigamos programando juntos alguna cosa en el futuro.',
				})}
				{renderCircle(700, 250, 'üéüÔ∏è', 'cine', {
					img: 'src/assets/img/modalImage/oppen.avif',
					text: 'Esta fue la primera vez que hicimos algo y presencial, aunque casi no se da, pero quisiste acompa√±arme en un momento complicado y lo agradezco. Recuerdo esas 3 horas donde te tratabas de acomodar porque estabas cansada ya del asiento. Desde ese d√≠a asocio a Oppenheimer contigo.',
				})}
				{renderCircle(950, 290, 'üçù', 'comida', {
					img: 'src/assets/img/modalImage/gatoComiendo.gif',
					text: 'Esta ocasi√≥n fue de mis preferidas, si bien ya hab√≠amos ido al cine juntos, esta fue donde m√°s pudimos conversar y escuchar tus historias de tus accidentes yuyines o de tus planes a futuro, es algo que recuerdo con cari√±o. Me gusta escucharte sobre lo que quieres hacer o quieres tener, me hace sentir parte de eso. Y era verdad que era mucha comida, de solo recordarlo me lleno.',
				})}
				{renderCircle(950, 550, 'üöá', 'metro', {
					img: 'src/assets/img/modalImage/bicho_llorando.gif',
					text: 'Creo que siempre llevar√© a esa se√±ora y a la ni√±a de al lado en mis recuerdos por tu culpa, aparte de toda la gente que habr√° pasado como dijiste, aunque podr√≠a haber salido menos humillante tal vez, no me arrepiento de ese d√≠a porque aunque no fue la mejor te pude transmitir lo que pensaba de ti ',
				})}
				{renderCircle(700, 590, 'üì∫', 'anime', {
					img: 'src/assets/img/modalImage/gatotv.gif',
					text: 'Aqu√≠ empez√≥ tu ca√≠da al mundo oscuro, Empezamos con una pel√≠cula triste, pero bonita y terminamos viendo death note, me gusta verlo contigo, si bien ya la vi me entretengo esperando tus reacciones o escuchar tus pensamientos de que pasara. Tambi√©n tenemos pendientes otras pel√≠culas que cuando se pueda espero veamos juntos.',
				})}
				{renderCircle(450, 550, '‚õ∞Ô∏è', 'cerro', {
					img: 'src/assets/img/modalImage/oso.gif',
					text: 'Soy como el Max diciendo lo del grupo preferido, pero este momento tambi√©n es unos de mis preferidos, porque no ten√≠amos un gran plan m√°s que comer helado, pero al final hablamos en un parque, subimos el cerro y caminamos hasta estaci√≥n central. Esos momentos comunes donde solo habl√°bamos de lo primero que se ven√≠a a la mente, los valoro bastante. S√© que no necesito un gran plan para pasarlo bien contigo, solo tu compa√±√≠a y poder hablar. Pr√≥ximamente tenemos que ver si podemos salir del escape room.',
				})}
				{renderCircle(250, 590, 'üóø', '?', {
					img: 'src/assets/img/modalImage/monos.gif',
					text: 'Me faltaron muchos momentos, pero tengo pocos c√≠rculos y est√°n complicados de hacer. Como menciones honorables menciono cuando hablamos horas por tel√©fono o el otro d√≠a donde te volviste un guar√©n y jugamos. S√© que es complicado, pero t√∫ lo sabes, quiero seguir haciendo cosas contigo, no necesito grandes salidas o cosas entremedio, solo quiero compartir y apoyarte en lo que sea que te complique. Independiente de lo que sea, yo te apoyar√© y estar√© contigo. Si valoro algo es que para bien o para mal hemos sido honestos el uno con el otro y quiero que sigamos as√≠. Puedes dudar muchas cosas pero nunca te cuestiones que eres una linda persona. ',
				})}

				{/* Flecha derecha */}
				<foreignObject x="1150" y="370" width="100" height="200">
					<Link to="/sabri">
						<ArrowIcon />
					</Link>
				</foreignObject>

				<image
					href="src/assets/img/gato.png"
					x="60"
					y="700"
					width="100"
					height="100"
					className="animate-moveCat"
				/>
			</svg>
			{/* Modal */}
			<Modal
				isOpen={isModalOpen}
				onClose={() => setModalOpen(false)}
				content={modalContent}
			/>
			<style>
				{`
        @keyframes moveCat {
			0% {
				x: 60;
			}
			50% {
				x: calc(100% - 160px); /* Ajusta seg√∫n la distancia que desees. 160px es la suma del inicio x y el ancho de la imagen */
			}
			100% {
				x: 60;
			}
		}
		.animate-moveCat {
			animation: moveCat 15s ease-in-out infinite;
		}
    `}
			</style>
		</div>
	);
}
